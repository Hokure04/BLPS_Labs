x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2025-01-20T14-49-07Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "23236"
    - "9001"
  environment:
    MINIO_ROOT_USER: JABA_SUPER_USER_MINIO
    MINIO_ROOT_PASSWORD: jaba127!368601NO
  healthcheck:
    test: [ "CMD", "mc", "ready", "local" ]
    interval: 5s
    timeout: 5s
    retries: 5

services:
  mini-service-kafka:
    image: miniservice:latest
    build:
      context: kafka-listener-service
      dockerfile: Dockerfile
    network_mode: host


  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  zookeeper-2:
      image: confluentinc/cp-zookeeper:7.4.4
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "32181:2181"

  kafka-1:
      image: confluentinc/cp-kafka:7.4.4
      depends_on:
        - zookeeper-1
        - zookeeper-2

      ports:
        - "29092:29092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-2:
      image: confluentinc/cp-kafka:7.4.4
      depends_on:
        - zookeeper-1
        - zookeeper-2
      ports:
        - "39092:39092"
      environment:
        KAFKA_BROKER_ID: 2
        KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "first"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "user"
    command: postgres -c max_prepared_transactions=100
    ports:
      - "23848:5432"
  mini-service-postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "first"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "user"
    command: postgres -c max_prepared_transactions=100
    ports:
      - "23666:5432"
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "23236:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
  postgresql:
    image: docker.io/bitnami/postgresql:latest
    environment:
      #      - psql -U bn_keycloak -d bitnami_keycloak
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_DATABASE=bitnami_keycloak
#    volumes:
#      - 'postgresql_data:/bitnami/postgresql'
  keycloak:
      image: kcow:latest
      build:
        context: spi-registrator-rest
        dockerfile: Dockerfile
      ports:
        - "80:8080"
        # for debug
        - '8787:8787'
      environment:
        - KEYCLOAK_CREATE_ADMIN_USER=true
      depends_on:
        - postgresql

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

#mvn clean install && docker compose down -v && docker compose build && docker compose up